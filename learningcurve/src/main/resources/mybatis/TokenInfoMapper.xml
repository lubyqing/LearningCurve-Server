<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.arthas.learningcurve.dao.TokenInfoMapper" >
  <resultMap id="BaseResultMap" type="com.arthas.learningcurve.model.TokenInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="loginTime" property="logintime" jdbcType="LONGVARCHAR" />
    <result column="appKey" property="appkey" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userId
  </sql>
  <sql id="Blob_Column_List" >
    loginTime, appKey
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from token_info
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from token_info
    where userId = #{userid,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from token_info
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByUserId" parameterType="java.lang.Integer" >
    delete from token_info
    where userId = #{userid,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.arthas.learningcurve.model.TokenInfo" >
    insert into token_info (id, userId, loginTime, 
      appKey)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{logintime,jdbcType=LONGVARCHAR}, 
      #{appkey,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.arthas.learningcurve.model.TokenInfo" >
    insert into token_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="logintime != null" >
        loginTime,
      </if>
      <if test="appkey != null" >
        appKey,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="logintime != null" >
        #{logintime,jdbcType=LONGVARCHAR},
      </if>
      <if test="appkey != null" >
        #{appkey,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.arthas.learningcurve.model.TokenInfo" >
    update token_info
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="logintime != null" >
        loginTime = #{logintime,jdbcType=LONGVARCHAR},
      </if>
      <if test="appkey != null" >
        appKey = #{appkey,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.arthas.learningcurve.model.TokenInfo" >
    update token_info
    set userId = #{userid,jdbcType=INTEGER},
      loginTime = #{logintime,jdbcType=LONGVARCHAR},
      appKey = #{appkey,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.arthas.learningcurve.model.TokenInfo" >
    update token_info
    set userId = #{userid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>